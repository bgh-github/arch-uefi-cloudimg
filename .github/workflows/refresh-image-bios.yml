name: Refresh image - BIOS

on:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:

jobs:
  arch-uefi-cloudimg:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: '--privileged --volume=/dev:/dev'
    env:
      build_script_path: ./build-img-bios.sh
      output_path: /tmp/arch-uefi-cloudimg-bios.raw
      storage_api_url : https://la.storage.bunnycdn.com/bgh-cdn
    steps:
      - uses: actions/checkout@v4
      - name: Install build packages
        run: |
          pacman \
            --sync \
            --sysupgrade \
            --refresh \
            --noconfirm \
            gptfdisk sudo arch-install-scripts
      - name: Remove container config preventing pacman.conf extraction into chroot
        run: sed --in-place --expression='s|\(NoExtract.*\)\( etc/pacman.conf\)|\1|' /etc/pacman.conf
      - name: Build image
        run: |
          chmod +x "${{ env.build_script_path }}"
          sudo "${{ env.build_script_path }}" "${{ env.output_path }}"
      - name: Create a gzip copy
        run: |
          gzip --keep "${{ env.output_path }}"
          echo "image_paths=${{ env.output_path }} ${{ env.output_path }}.gz" >> $GITHUB_ENV
      - name: Generate checksums
        run: |
          for image_path in ${image_paths}; do
            cd "$(dirname "${image_path}")"
            sha384sum "$(basename "${image_path}")" \
              > "$(basename "${image_path}").sha384sum"
          done
      - name: Upload to CDN
        run: |
          for image_path in ${image_paths}; do
            curl \
              --request PUT \
              --header "AccessKey: ${{ secrets.BUNNY_ACCESSKEY }}" \
              --header 'Content-Type: application/octet-stream' \
              --data-binary "@${image_path}.sha384sum" \
              --url "${{ env. storage_api_url }}/$(basename "${image_path}").sha384sum"
            curl \
              --request PUT \
              --header "AccessKey: ${{ secrets.BUNNY_ACCESSKEY }}" \
              --header 'Content-Type: application/octet-stream' \
              --upload-file "${image_path}" \
              --url "${{ env. storage_api_url }}/$(basename "${image_path}")"
          done
